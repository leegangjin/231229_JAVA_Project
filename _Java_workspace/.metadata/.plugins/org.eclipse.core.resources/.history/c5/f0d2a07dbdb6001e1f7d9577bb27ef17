package day12;

import day11.Card;

public class Class05 {
   /* 객체를 생성시 값을 초기화 하는 방법
    * - 기본값, 명시적 초기값, 초기화 블럭, 생성자
    * 1. 기본값 : 기본적으로 지정되는 값 (int = 0 / String = null)
    * 2. 명시적 초기값 : 멤버변수를 선언함과 동시에 값을 지정하는 방법
    * ex) private String name = "홍길동";
    * 3. 초기화 블럭 : { } 멤버변수를 초기화 하는 방법 
    * 4. 생성자 : 객체를 생성할 때 초기화해서 생성하는 값
    * 
    * 초기값의 우선순위
    * 기본값 < 명시적초기값 < 초기화 블럭 < 생성자 (가장 우선순위가 높음)
    * 
    * */
   
   public static void main(String[] args) {
      
      EzenStudent ez = new EzenStudent("인천","철수","010-1111-1111","백엔드개발");
      // toString()메서드가 없으면 객체의 주소가 출력
      // toString()메서드가 있으면 toString() 출력
      System.out.println(ez); // es.toString() 같은 의미
      System.out.println("-------");
      EzenStudent ez2 = new EzenStudent("강남","영이","010-1112-1112","프론트개발");
      System.out.println(ez2);
      System.out.println("-------");
      EzenStudent ez3 = new EzenStudent();
      System.out.println(ez3);
      
      // 학생 5명 생성
      System.out.println("-------");
      EzenStudent ez4 = new EzenStudent("신사" , "순이", "010-1234-1234", "java");
      System.out.println(ez4);
      System.out.println("-------");
      EzenStudent ez5 = new EzenStudent("인천" , "노아", "010-1234-1234", "java");
      System.out.println(ez5);
      EzenStudent ez6 = new EzenStudent("인천" , "킴노아", "010-1234-1234", "java");
      System.out.println(ez6);
      EzenStudent ez7 = new EzenStudent("인천" , "김룰루", "010-1234-1234", "백엔드개발");
      System.out.println(ez7);
    EzenStudent studentarr[] =new EzenStudent [7];
     
     
    studentarr[0] =ez;
    studentarr[1] =ez2;
    studentarr[2] =ez3;
    studentarr[3] =ez4;
    studentarr[4] =ez5;
    studentarr[5] =ez6;
    studentarr[6] =ez7;
    
    //영이 학생이 듣고 있는 과목을 출력
    String searchName ="영이";
    System.out.println("--"+searchName+"학생이 듣고 있는 과목정보--");
    
     for(int i =0; i < studentarr.length; i++) {
    	 if(searchName.equals(studentarr[i].getName())) {
    		 System.out.println(studentarr[i].getgroup());
    	 }
     }
     
     //순이가 java를 들을려고 했는데 빅데이터로 변경 => 순이 정보 출력
     String modify ="순이";
     System.out.println("--"+modify+"학생의 변경 후 정보--");
     
     for(int i =0; i <studentarr.length; i++) {
    	 if(modify.equals(studentarr[i].getName())) {
    		 studentarr[i].setgroup("빅데이터");
    		 System.out.println(studentarr[i]);
    	 }
     }
     //자바를 듣고있는 학생명단을 출력 / 학생이 없으면 명단이 없습니다. 출력
     String subject ="파이썬";
     for(int i =0; i <studentarr.length; i++) {
    	 if(subject.equals(studentarr[i].getgroup())) {
    		 System.out.println(studentarr[i].getName());
    	 }else {
    		 System.out.println("명단이 없습니다.");
    	 }
    		 
     }
   
   }
   
  

}

class EzenStudent{
   // 학생의 정보를 생성하는 클래스
   // 멤버변수 : 이름 / 번호 / 문의 강의
   
   private String gigum = "Incheon"; // 명시적 초기값
   private String name; // 기본초기값 null
   private String phoneNum;
   private String group;
   
   public EzenStudent () {}   
   
   public EzenStudent(String gigum, String name, String phoneNum, String group) {
//      super(); // 나의 상위(부모) 클래스 생성사 호출
      this.gigum = gigum;
      this.name = name;
      this.phoneNum = phoneNum;
      this.group = group;
   }
   
   {
    // 초기화 블럭 영역 
      gigum = "인천";
      group = "미정";
      name = "미상";
      phoneNum = "000";
      
   }
   // toString() == print메스드와 비슷한 일을 함 
   @Override // 상속받은 메서드를 바꿔서 쓰고 싶을 때 사용
   public String toString() { 
      return gigum + " > " + name + " ( " + phoneNum + " / " + group + " )";
   }

//   public void printStudent() {
//      System.out.println("이름 : " + name);
//      System.out.println("전화번호 : " + phoneNum);
//      System.out.println("희망강의 : " + group);
//   }

   public String getName() {
      return name;
   }

   public void setName(String name) {
      this.name = name;
   }

   public String getPhoneNum() {
      return phoneNum;
   }

   public void setPhoneNum(String phoneNum) {
      this.phoneNum = phoneNum;
   }

   public String getgroup() {
      return group;
   }

   public void setgroup(String class1) {
      group = class1;
   }
   
   
}